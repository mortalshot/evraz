// Заголовки, общие БЄМ блоки и прочее...
h,
.title-h {
  &1 {
    font-weight: 400;
    line-height: math.div(55, 50);
    @include adaptiveValue("font-size", 50, 22);
  }

  &2 {
    font-weight: 700;
    line-height: math.div(48, 46);
    @include adaptiveValue("font-size", 46, 20);
  }

  &3 {
    font-weight: 400;
    line-height: math.div(48, 46);
    @include adaptiveValue("font-size", 24, 18);
  }

  &4 {
    font-weight: 500;
    line-height: 130%;
    @include adaptiveValue("font-size", 20, 16);
  }
}

img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

section {
  @include adaptiveValue("margin-top", 140, 80);
  @include adaptiveValue("margin-bottom", 140, 80);
}

.d-none {
  // display: none;
}

._section-bg {
  margin: 0;
  @include adaptiveValue("padding-top", 120, 40);
  @include adaptiveValue("padding-bottom", 120, 40);
}

._heading {
  &:not(:last-child) {
    @include adaptiveValue("margin-bottom", 60, 32);
  }
}

.text-link {
  color: $Orange;
}

.icon {
  display: block;
  width: toRem(24);
  aspect-ratio: 1 / 1;
}

._content {
  & > * {
    @include adaptiveValue("margin-top", 32, 16);
    @include adaptiveValue("margin-bottom", 32, 16);
  }

  a {
    text-decoration: underline from-font;
    text-underline-offset: 3px;
    transition: $transition ease text-decoration 0s;

    @media (any-hover: hover) {
      &:hover {
        text-decoration: underline transparent from-font;
      }
    }
  }

  p {
    min-height: toRem(1);
  }

  ol {
    counter-reset: item;

    li {
      position: relative;
      list-style-type: none;
      @include adaptiveValue("padding-left", 40, 24);

      &::before {
        content: counter(item) ".";
        counter-increment: item;
        position: absolute;
        left: 0;
      }

      & > ol {
        counter-reset: subitem;

        li {
          &::before {
            content: counter(item) "." counters(subitem, ".") " ";
            counter-increment: subitem;
          }
        }
      }
    }
  }

  ul {
    padding-left: toRem(20);
    display: grid;
    align-content: flex-start;
    row-gap: toRem(8);
    margin: toRem(16) 0;

    li {
      list-style-type: disc;
    }
  }

  .table {
    width: 100%;
    overflow-x: auto;
    scrollbar-width: thin;

    table {
      width: 100%;
      border-collapse: collapse;
    }
  }

  .wp-block-quote {
    cite {
      opacity: 0.6;
    }
  }

  figure {
    img {
    }

    figcaption {
      line-height: math.div(24, 16);
      @include adaptiveValue("font-size", 16, 12);
      @include adaptiveValue("margin-top", 20, 12);
    }
  }

  @for $i from 1 through 4 {
    .columns-#{$i} {
      display: grid;
      @include adaptiveValue("gap", 35, 10);
    }
  }
  .columns-4 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(4, 1fr);
    }
    @media (min-width: $mobile) {
      grid-template-columns: repeat(4, 1fr);
    }
  }
  .columns-3 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  .columns-2 {
    @media (min-width: $mobileSmall) {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .wp-block-gallery {
    figure {
      margin: 0;

      @media (min-width: $mobileSmall) {
        position: relative;
        padding-bottom: 100%;

        img {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }
    }
  }

  blockquote {
    padding: toRem(4) toRem(0) toRem(4) toRem(24);
    border-left: toRem(5) solid $Yellow;
    @include adaptiveValue("padding-left", 24, 16);
  }

  .wp-block-media-text {
    display: grid;
    row-gap: toRem(24);
    @include adaptiveValue("column-gap", 92, 20, 0, 1440, 768);
    @include adaptiveValue("margin-top", 64, 32);
    @include adaptiveValue("margin-bottom", 64, 32);

    @media (min-width: $mobileM) {
      grid-template-columns: repeat(2, 1fr);
    }

    &.is-vertically-aligned-center {
      align-items: center;
    }

    &.is-vertically-aligned-bottom {
      align-items: flex-end;
    }

    // .wp-block-media-text__media
    &__media {
      @media (max-width:$mobileM){
        grid-row: 1/2;    
      }

      img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        aspect-ratio: 655 / 322;
      }
    }

    // .wp-block-media-text__content
    &__content {
      & > * {
        @include adaptiveValue("margin-top", 32, 16);
        @include adaptiveValue("margin-bottom", 32, 16);
      }

      :first-child {
        margin-top: 0;
      }
      :last-child {
        margin-bottom: 0;
      }
    }
  }

  br {
    @media (max-width:$mobileSmall){
       display: none; 
    }
  }

  :first-child {
    margin-top: 0;
  }
  :last-child {
    margin-bottom: 0;
  }
}

// Анимации при наведении
[class*="link-"] {
  position: relative;
  white-space: nowrap;

  &::before {
    content: "";
    display: block;
    width: 0;
    border-bottom: toRem(1) solid;
    position: absolute;
    left: 0;
    bottom: 0;
    opacity: 0;
    transition: $transition ease all 0s;
  }
}

.link-hover {
  @media (any-hover: hover) {
    &:hover {
      &::before {
        opacity: 1;
        width: 100%;
      }
    }
  }
}

.link-underline {
  &::before {
    width: 100%;
    opacity: 1;
  }

  @media (any-hover: hover) {
    &:hover {
      &::before {
        opacity: 0;
        width: 0%;
      }
    }
  }
}

@keyframes shake-horizontal {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50% {
    transform: translateX(-2px);
  }
  20%,
  40%,
  60% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(1px);
  }
}

.logo {
  display: inline-flex;
  align-items: center;

  // .logo__link
  &__link {
    @media (any-hover: hover) {
      transition: $transition ease opacity 0s;
      &:hover {
        opacity: 0.7;
      }
    }
  }
}

.menu {
  // .menu__icon
  &__icon {
  }

  // .menu__body
  &__body {
    a {
      text-decoration: underline transparent from-font;
      text-underline-offset: 3px;
      transition: $transition ease text-decoration 0s;

      @media (any-hover: hover) {
        &:hover {
          text-decoration: underline from-font;
        }
      }
    }
  }

  // .menu__arrow
  &__arrow {
  }
}

.contacts {
  // .contacts__item
  &__item {
    display: grid;
    align-content: flex-start;
    justify-content: flex-start;
    row-gap: toRem(12);

    // .contacts__item_phone
    &_phone {
    }
  }

  // .contacts__label
  &__label {
    font-weight: 300;
    line-height: 130%;
    color: $LGrey;
  }

  // .contacts__link
  &__link {
  }
}

.socials {
  display: flex;
  align-items: center;
  gap: toRem(16);

  // .socials__item
  &__item {
  }

  // .socials__link
  &__link {
    display: inline-flex;
    align-items: center;
    justify-content: center;

    @media (any-hover: hover) {
      &:hover {
        svg {
          animation: shake-horizontal 0.8s cubic-bezier(0.455, 0.03, 0.515, 0.955) both;
        }
      }
    }

    svg {
      fill: $White;
    }
  }
}

.ticker {
  overflow: hidden;
  white-space: nowrap;

  // .ticker__row
  &__row {
    display: inline-block;
    animation: 25s slide infinite linear;
    animation-play-state: paused;

    ._active & {
      animation-play-state: running;
    }
  }
}

@keyframes slide {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
  }
}

.title-bg {
  display: grid;
  align-content: flex-start;
  justify-items: flex-start;
  overflow: hidden;

  span {
    font-weight: 500;
    text-transform: uppercase;
    display: inline-flex;
    align-items: center;
    padding: toRem(8) toRem(20) toRem(4);
    @include adaptiveValue("padding-left", 20, 12);
    @include adaptiveValue("padding-right", 20, 12);
  }
}

// swiper
.swiper-arrows {
  display: flex;
  align-items: center;
  gap: toRem(12);

  // .swiper-arrows__arrow
  &__arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    border: toRem(1) solid $Line;
    flex: 0 0 toRem(64);
    width: toRem(64);
    height: toRem(64);

    &:not(.swiper-button-disabled) {
      cursor: pointer;
    }

    @media (any-hover: hover) {
      transition: $transition ease border-color 0s;

      &:hover {
        &:not(.swiper-button-disabled) {
          border-color: $Orange;

          svg {
          }
        }
      }
    }

    svg {
      fill: $Orange;
      width: toRem(40);
      height: toRem(40);
      flex: 0 0 toRem(40);
    }

    // .swiper-arrows__arrow_prev
    &_prev {
      svg {
        transform: rotate(-180deg);
      }
    }

    // .swiper-arrows__arrow_next
    &_next {
    }
  }
}

.swiper-pagination {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: toRem(12);
  margin-top: toRem(24);
}
.swiper-pagination-bullet {
  display: block;
  width: toRem(16);
  height: toRem(16);
  flex: 0 0 toRem(16);
  background-color: $Line;
  cursor: pointer;
  transition: $transition ease background-color 0s;
}

.swiper-pagination-bullet-active {
  background-color: $Orange;
}
